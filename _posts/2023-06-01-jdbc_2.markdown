---
layout: post
title: JDBC(2)
date: 2023-06-01 17:00:00 +0300
description:  # Add post description (optional)
img: jdbc_2-2.png # Add image post (optional)
fig-caption: JDBC # Add figcaption (optional)
tags: [JDBC, DB] # add tag
comments: true
---

>Java - JDBC(2)

### [학습 내용]

#### 간단한 프로젝트[덧셈, 뺄셈 맞추기 게임]

* SQLite를 이용하여 project에 필요한 db table, column을 생성해줌
* DAO, Member, MemberTest, BaseDB를 통해서 project 셋팅을 해줌
* Member에 필요한 필드와 생성자를 생성하여 값을 호출시 DB의 데이터와 동일한가를 위한 작업임
* IOprator 인터페이스를 상속받아 플러스, 마이너스 클래스는 게임에필요한 메서드를 받아옴
* BaseDB는 SQLite에서 만든 table, column을 이용하기 위한 Connection 작업
* MemberTest는 DB Connection이 제대로 이루어 지는가와 DB값과 Member의 값이 일치한가, 게임을 실행 시 각 메서드

>Java - JDBC(2) - 실습

![jdbc]({{site.baseurl}}/assets/img/jdbc_2.png)
![jdbc]({{site.baseurl}}/assets/img/jdbc_2-1.png)

>Java - JDBC(2) - 실습후기

* 어제에 이어서 JDBC를 이용한 프로젝트를 진행하였는데, 간단하면서도 혼자서 아직 로직을 짜라한다면 막히는 부분이 있을 거라 생각한다. 그러나 이제는 자연스럽게 Refactoring하는 법과 interface를 상속받아 각 Class에서 각 메서드를 활용하여 게임에는 지장이 없도록 하는 것 까지는 이해하고 진행을 하였지만 중간 Test에서 Error가 나서 구글링을 하였더니, SQLite 와 Connection이 안돼어서 알고보니 의존성 문제였다. 그래서 SQLite 의존성을 추가하였더니 문제없이 잘 진행이 되었고, GUI까지 강사님께서 코드를 주셨고 그것으로결과물까지 확인하는 것 까지 마무리가 되었다. 그러나 여전히 문제는 이미지 경로가 문제가 발생하여 해결중에 있고, 그외에는 스스로 구글링하면서 고쳐나갔다. 쉽지 않지만 혼자서 해결을 할려고 하다보니 시간은 많이 흘렀더라도 기억에 많이 남게되고 특히 한번 더 상기 시키고자 회고록 까지 작성하다보니 더욱 더 기억에 남게되어 좋다.